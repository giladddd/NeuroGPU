objref outFile,st, st2, st3, st4
depth = 2
celsius = 25
proc createSimpleCompt(){
	nseg = 29
	cm=1
	insert kv
	gbar_kv = 500
	//insert ca
	//gbar_ca = gbar_ca*1000
	//usetable_hh2=0
	//gnabar_hh =0
	//gkbar_hh =0
	//gbar_na = gbar_na*35
	//gbar_kv = gbar_kv*35
	
finitialize(-65)
}

/*begintemplate String
	public s
	strdef s
endtemplate String
objref s[10]*/



numOfNodes = 2^depth-1
create dends[numOfNodes]
proc buildBTree(){
	fatherInd = $1
	currInd=$2
	currDepth =$3
	access dends[$2]
	createSimpleCompt()
	//nseg=currInd+1
	
	if($2>0){
		connect dends[$2](0), dends[$1](1)
	}
	printf("f is %d c is %d d is %d\n",$1,$2,$3)
	if($3 < depth){
	printf("currDepth is %d depth is %d\n",$3,depth)
		buildBTree($2,$2*2+1,$3+1)
		buildBTree($2,$2*2+2,$3+1)
	}	
}
buildBTree(0,0,1)
access dends[0]
st = new IClamp(.5)
st.del =0.1
st.dur =0.5
st.amp = 120
nseg=2
//diam = diam*0.001

st2 = new IClamp(.7)
st2.del =0.1
st2.dur =0.5
st2.amp = 120

access dends[2]
st3 = new IClamp(.5)
st3.del =0.1
st3.dur =0.5
st3.amp = 120

st4 = new IClamp(.73)
st4.del =0.1
st4.dur =0.5
st4.amp = 120

tfinal = 1.5
dt =0.01

//ADD STUFF HERE
// Start topology output
hoc_stdout("C:\Users\Roy\Documents\NeuroGPU2\Neuron\printCell\Amit\output\64T.csv")
topology()
forall{
	printf("%s\n",secname())
	printf("%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f\n",nseg,L,diam,Ra,cm,dt,st.del,st.dur,st.amp,tfinal,v(0.5),area(0.5),parent_connection(),n3d())
}
hoc_stdout()
// End topology output
// Start mechanisms output
objref mt,ms,fn,pp
strdef s,ss,mname
mt = new MechanismType(0)
fn = new File()
fn.wopen("C:\Users\Roy\Documents\NeuroGPU2\Neuron\printCell\Amit\output\64MDL.csv")
forall{
	fn.printf("#%s\n",secname())
	for i=0, mt.count()-1 {
		mt.select(i)
		mt.selected(mname)
		if (ismembrane(mname)){
			ms = new MechanismStandard(mname,-1)
			for j=0, ms.count()-1 {
				k = ms.name(s, j)
				sprint(ss,"temp=%s",s)
				execute(ss)
				fn.printf("%s = %f\n",s,temp)
			}
		}
	}
}
fn.close()
// End mechanisms output
// Start point processess mechanisms output
fn = new File()
fn.wopen("C:\Users\Roy\Documents\NeuroGPU2\Neuron\printCell\Amit\output\64PP.csv")
forall{
	fn.printf("#%s\n",secname())
	mt = new MechanismType(1)
	mt.select("IClamp")
	for (pp = mt.pp_begin(); object_id(pp) != 0; pp = mt.pp_next()) {
		x = pp.get_loc()
		del1 = pp.del
		dur1 = pp.dur
		amp1 = pp.amp
		fn.printf("IClamp,%g, %g, %g, %g, ", x, del1, dur1, amp1)
		pop_section()
	}
	fn.printf("\n")
}
fn.close()
// End point processess mechanisms output

load_file("nrngui.hoc")
objref g1
access dends[0]
g1 =new Graph()
g1.beginline()
finitialize(-65)
while (t<tfinal){
	g1.line(t,v)
	fadvance()
	}



