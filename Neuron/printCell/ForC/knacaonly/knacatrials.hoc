objref outFile,st, st2, st3, st4
depth = 2
celsius = 25
proc createSimpleCompt(){
	nseg = 29
	cm=1
	insert kv
	insert na
	//insert ca
	gbar_na = 1000
	gbar_kv = 500
	//gbar_ca = 1000
	//insert ca
	//gbar_ca = gbar_ca*1000
	//usetable_hh2=0
	//gnabar_hh =0
	//gkbar_hh =0
	//gbar_na = gbar_na*35
	//gbar_kv = gbar_kv*35
	diam = 0.5
	L=1
finitialize(-65)
}

/*begintemplate String
	public s
	strdef s
endtemplate String
objref s[10]*/



numOfNodes = 2^depth-1
create dends[numOfNodes]
proc buildBTree(){
	fatherInd = $1
	currInd=$2
	currDepth =$3
	access dends[$2]
	createSimpleCompt()
	//nseg=currInd+1
	
	if($2>0){
		connect dends[$2](0), dends[$1](1)
	}
	printf("f is %d c is %d d is %d\n",$1,$2,$3)
	if($3 < depth){
	printf("currDepth is %d depth is %d\n",$3,depth)
		buildBTree($2,$2*2+1,$3+1)
		buildBTree($2,$2*2+2,$3+1)
	}	
}
buildBTree(0,0,1)
access dends[0]
st = new IClamp(.5)
st.del =0.1
st.dur =0.5
st.amp = 0.12
nseg=2
//diam = diam*0.001



tfinal = 1.5
dt =0.01

//ADD STUFF HERE

load_file("nrngui.hoc")
objref g1
access dends[0]
g1 =new Graph()
g1.beginline()
finitialize(-65)
while (t<tfinal){
	g1.line(t,v)
	fadvance()
	}


