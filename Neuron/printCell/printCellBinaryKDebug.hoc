objref outFile,st
depth = 3
proc createSimpleCompt(){
	nseg = 1
	cm=1
	insert hh
	gnabar_hh =gnabar_hh//*10

finitialize(-65)
}
proc printTopology(){
	topology()
	forall{
		printf("%s\n",secname())
		printf("%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f\n",nseg,L,diam,Ra,cm,dt,st.del,st.dur,st.amp,tfinal,v(0.5))
		printf("%f,%f,%f,%f,%f,%f\n",gnabar_hh,gkbar_hh,gl_hh,ena,ek,el_hh)
		}
}

proc printFmatrix(){
	hoc_stdout($s1)
	while(t<tfinal){
			fcurrent()
			fmatrix()
			forall{
				printf("%s\n",secname())
				printf("%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f\n",t,v(0),gk_hh(0),gna_hh(0),gl_hh(0),ik(0),ina(0),il_hh(0),m_hh(0),h_hh(0),n_hh(0),minf_hh,mtau_hh,hinf_hh,htau_hh)
				printf("%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f\n",t,v(0.2),gk_hh(0.2),gna_hh(0.2),gl_hh(0.2),ik(0.2),ina(0.2),il_hh(0.2),m_hh(0.2),h_hh(0.2),n_hh(0.2),minf_hh,mtau_hh,hinf_hh,htau_hh)
				printf("%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f\n",t,v(0.4),gk_hh(0.4),gna_hh(0.4),gl_hh(0.4),ik(0.4),ina(0.4),il_hh(0.4),m_hh(0.4),h_hh(0.4),n_hh(0.4),minf_hh,mtau_hh,hinf_hh,htau_hh)
				printf("%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f\n",t,v(0.6),gk_hh(0.6),gna_hh(0.6),gl_hh(0.6),ik(0.6),ina(0.6),il_hh(0.6),m_hh(0.6),h_hh(0.6),n_hh(0.6),minf_hh,mtau_hh,hinf_hh,htau_hh)
				printf("%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f\n",t,v(0.8),gk_hh(0.8),gna_hh(0.8),gl_hh(0.8),ik(0.8),ina(0.8),il_hh(0.8),m_hh(0.8),h_hh(0.8),n_hh(0.8),minf_hh,mtau_hh,hinf_hh,htau_hh)
			}
			fadvance()
		}
	hoc_stdout()
}
numOfNodes = 2^depth-1
create dends[numOfNodes]
proc buildBTree(){
	fatherInd = $1
	currInd=$2
	currDepth =$3
	access dends[$2]
	createSimpleCompt()
	nseg = currInd+1
	if($2>0){
		connect dends[$2](0), dends[$1](1)
	}
	printf("f is %d c is %d d is %d\n",$1,$2,$3)
	if($3 < depth){
	printf("currDepth is %d depth is %d\n",$3,depth)
		buildBTree($2,$2*2+1,$3+1)
		buildBTree($2,$2*2+2,$3+1)
	}	
}
buildBTree(0,0,1)
access dends[0]
st = new IClamp(.5)
st.del =0.5
st.dur =1
st.amp = 1260

tfinal = 10
dt =0.01
hoc_stdout("./Output/BTreeHHTopo.csv")
printTopology()
hoc_stdout()
printFmatrix("./Output/BTreefmatrixHH.csv")
load_file("nrngui.hoc")

print numOfNodes