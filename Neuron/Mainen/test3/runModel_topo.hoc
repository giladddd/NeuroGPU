strdef fitFile,timesFile,paramsFile,stimFile,outFile,modelFile
modelFile = "././myMainen.hoc"
timesFile = "././times.dat"
paramsFile = "./opt_params.dat"
stimFile = "./singleStim.dat"
outFile = "././volts/AnalyzeAPAllopt_params_sinsMean30.dat"
ntimestep =6150
nparams =17
psize =1
ntraces =1
tfinal =615
load_file(modelFile)
objref st,stims,fin,fout,pmat,matOut,stimtime
fin = new File()
fout = new File()
proc runMatrix(){
	access soma

	st = new IClamp(0.5)

	st.del=100 
	st.dur=500
	st.amp = 0.25
	printf ("$o1.nrow,$o2.nrow,$o2.ncol,%d,%d,%d",$o1.nrow,$o2.nrow,$o2.ncol)
	matOut = new Matrix($o1.nrow,($o2.nrow*$o2.ncol))
	for(sim=0;sim<$o1.nrow;sim+=1){
	printf("running sim %d\n",sim)
		counter=0
		transvec = $o1.getrow(sim)
dt=0.1
		tfunc()

		for(i=0;i<stims.nrow;i+=1){

			finitialize(v_init)
			for(tt =0;tt<ntimestep;tt+=1){

				

				matOut.x(sim,counter)=v(0.5)
				counter+=1
				fadvance()
			}
		}
	}
	printf("finshed run matrix %s\n",outFile)
}
proc readMatrix(){localobj temp
	temp = new Vector()
	fin.ropen($s1)
	for (i=0;i<$o2.nrow;i+=1){
		temp.vread(fin)
		$o2.setrow(i,temp)
	}
	fin.close()
}
proc writeMatrix(){localobj temp
	fout.wopen($s1)
	temp = new Vector()
	for (i=0;i<$o2.nrow;i+=1){
		temp = $o2.getrow(i)
		temp.vwrite(fout,3)
	}
	fout.close()
}
stimtime = new Matrix(1,ntimestep)
readMatrix(timesFile,stimtime)
pmat = new Matrix(psize,nparams)
readMatrix(paramsFile,pmat)
stims = new Matrix(ntraces,ntimestep)
readMatrix(stimFile,stims)
runMatrix(pmat,stims)
writeMatrix(outFile,matOut)

finitialize(v_init)
// ADD STUFF HERE
// Start topology output
hoc_stdout("C:\Users\roy\Documents\neurogpu2\Neuron/printCell/Amit/Output/64T.csv")
topology()
forall{
	printf("%s\n",secname())
	printf("%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f\n",nseg,L,diam,Ra,cm,dt,st.del,st.dur,st.amp,tfinal,v(0.5),area(0.5),parent_connection(),n3d())
}
hoc_stdout()
// End topology output
// Start mechanisms output
objref mt,ms,fn,pp
strdef s,ss,mname
mt = new MechanismType(0)
fn = new File()
fn.wopen("C:\Users\roy\Documents\neurogpu2\Neuron/printCell/Amit/Output/64MDL.csv")
forall{
	fn.printf("#%s\n",secname())
	for i=0, mt.count()-1 {
		mt.select(i)
		mt.selected(mname)
		if (ismembrane(mname)){
			ms = new MechanismStandard(mname,-1)
			for j=0, ms.count()-1 {
				k = ms.name(s, j)
				sprint(ss,"temp=%s",s)
				execute(ss)
				fn.printf("%s = %f\n",s,temp)
			}
		}
	}
}
fn.close()
// End mechanisms output
// Start point processess mechanisms output
fn = new File()
fn.wopen("C:\Users\roy\Documents\neurogpu2\Neuron/printCell/Amit/Output/64PP.csv")
forall{
	fn.printf("#%s\n",secname())
	mt = new MechanismType(1)
	mt.select("IClamp")
	for (pp = mt.pp_begin(); object_id(pp) != 0; pp = mt.pp_next()) {
		x = pp.get_loc()
		del1 = pp.del
		dur1 = pp.dur
		amp1 = pp.amp
		fn.printf("IClamp,%g, %g, %g, %g, ", x, del1, dur1, amp1)
		pop_section()
	}
	fn.printf("\n")
}
fn.close()
// End point processess mechanisms output
// quit()

