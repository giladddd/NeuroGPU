objref outFile,st

proc createSimpleSec(){
	insert hh
	L=10
	diam=1
	nseg = 5
	Ra=10
	cm=1
	finitialize(-65)
}
proc insertStim(){
	st = new IClamp(.5)
	st.del =1000
	st.dur =0.5
	st.amp = 0.1
}

proc printTopology(){
	topology()
	forall{
		printf("%s\n",secname())
		printf("%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f\n",nseg,L,diam,Ra,cm,dt,st.del,st.dur,st.amp,tfinal,v(0.5))
		}
}
dt = 0.01
tfinal=20
create soma_a,soma_b,axona,dendb
	objref syn,netcon
proc network(){
	forall{
		createSimpleSec()
	}
	connect axona(0), soma_a(1)
	connect dendb(0), soma_b(1)
	access axona
	dendb syn = new ExpSynx(0)
	axona netcon = new NetCon (&v(0.5),syn,-20,1,0.5)

	
	
}
objref g1,g2,g3
proc printFmatrix(){
	dt = 1
	tfinal = 1000
	while(t<tfinal){
		fadvance()
	}
	g1= new Graph()
	g1.beginline()
	g2= new Graph()
	g2.beginline()
	g3= new Graph()
	g3.beginline()
	hoc_stdout($s1)
	
	i=0
	dt = 0.01
	tfinal= 1020
	while(t<tfinal){
		fadvance()
		fcurrent()
		fmatrix()
		forall{
			g1.line(t,axona.v(0.5))
			g2.line(t,soma_b.v(0.5))
			access dendb
			g3.line(t,syn.g)
			printf("%s\n",secname())
			printf("%f,%f,%f,%f\n",t,v(0.5),i_cap(0.5),st.amp)
			i+=1	
		}
	}
	hoc_stdout()
	g1.label("soma_a")
	g2.label("soma_b")
}
network()
insertStim()
load_file("nrngui.hoc")

hoc_stdout("./output/forkTopo.csv")
printTopology()
hoc_stdout()
printFmatrix("./output/forkData.csv")
